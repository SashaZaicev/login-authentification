{"version":3,"sources":["Components/LoginForm/LoginForm.module.scss","Pages/UserPage/UserPage.module.scss","Components/Input/Input.module.scss","Components/Button/Button.module.scss","Components/Error/Error.module.scss","Components/Preloader/Preloader.module.scss","App.module.scss","Pages/LoginPage/LoginPage.module.scss","reportWebVitals.ts","Pages/UserPage/selectors.ts","redux/app-reducer.ts","API/api.ts","API/auth-api.ts","redux/auth-reducer.ts","Components/Input/Input.tsx","Components/Button/Button.tsx","Components/LoginForm/LoginForm.tsx","Components/Error/Error.tsx","Components/Preloader/Preloader.tsx","Pages/LoginPage/LoginPage.tsx","Pages/UserPage/UserPage.tsx","App.tsx","redux/store.ts","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","selectorUserData","state","authState","user","selectorIsLogged","isLoggedIn","selectorRequestStatus","appState","status","selectorAppError","error","initializeState","SET_STATUS","SET_ERROR","setAppStatus","type","setAppError","axiosInstance","axios","create","withCredentials","baseURL","headers","Accept","interceptorsConfig","config","token","localStorage","getItem","Boolean","Authorization","interceptors","request","use","authAPI","clientId","email","password","post","res","get","SET_IS_LOGIN","SET_USER_DATA","setIsLoggedIn","value","getAuthUserData","dispatch","a","data","message","Input","inputLabel","inputLabelName","onChange","onChangeText","onKeyPress","onEnter","className","spanClassName","restProps","finalInputClassName","style","superInput","finalSpanClassName","spanError","inputWrapper","id","e","currentTarget","key","htmlFor","Button","React","memo","red","finalClassName","default","validate","values","errors","toString","length","test","LoginForm","callback","formik","useFormik","initialValues","onSubmit","setSubmitting","containerInput","name","placeholder","formWrapper","headline","headlineText","form","formDescription","handleSubmit","input","handleChange","formBtnWrapper","formBtn","Error","errorWrapper","Preloader","preloaderWrapper","loader","LoginPage","useSelector","isLogIn","useDispatch","sentLoginData","useCallback","setItem","accessToken","refreshToken","login","to","PATH","USER","wrapper","UserPage","logoutHandler","removeItem","useEffect","userBlock","userInfo","info","logoutBtnWrapper","onClick","logoutBtn","LOGIN","App","s","app","content","path","exact","render","reducers","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c1eda83f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"formWrapper\":\"LoginForm_formWrapper__So2M-\",\"headline\":\"LoginForm_headline__lqrsw\",\"headlineText\":\"LoginForm_headlineText__k6Cj-\",\"form\":\"LoginForm_form__ctPRN\",\"formDescription\":\"LoginForm_formDescription__2WxVO\",\"input\":\"LoginForm_input__ZEWA2\",\"formBtnWrapper\":\"LoginForm_formBtnWrapper__TjhwS\",\"formBtn\":\"LoginForm_formBtn__2M4ET\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"UserPage_wrapper__2o_TZ\",\"userBlock\":\"UserPage_userBlock__16ica\",\"userInfo\":\"UserPage_userInfo__2vVGT\",\"info\":\"UserPage_info__2nWai\",\"logoutBtnWrapper\":\"UserPage_logoutBtnWrapper__xUE06\",\"logoutBtn\":\"UserPage_logoutBtn__1bGIO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputWrapper\":\"Input_inputWrapper__1KzHy\",\"superInput\":\"Input_superInput__1ydET\",\"spanError\":\"Input_spanError__39jvQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"default\":\"Button_default__27Ubw\",\"red\":\"Button_red__seRSR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"errorWrapper\":\"Error_errorWrapper__2Egow\",\"error\":\"Error_error__jH6pI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloaderWrapper\":\"Preloader_preloaderWrapper__2N9kZ\",\"loader\":\"Preloader_loader__1Jav-\",\"load1\":\"Preloader_load1__LtX7W\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2mKl_\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"LoginPage_wrapper__kxzfb\",\"headline\":\"LoginPage_headline__3aNxx\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {AppStateType} from '../../redux/store';\n\nexport const selectorUserData= (state: AppStateType) => state.authState.user\nexport const selectorIsLogged = (state: AppStateType) => state.authState.isLoggedIn\nexport const selectorRequestStatus= (state: AppStateType) => state.appState.status\nexport const selectorAppError= (state: AppStateType) => state.appState.error\n","type ActionsType = ReturnType<typeof setAppStatus>\n    | ReturnType<typeof setAppError>\n    | ReturnType<typeof setAppStatus>\n\nexport type StatusType = 'idle' | 'loading' | 'success' | 'unsuccessful'\nlet initializeState = {\n    status: 'idle',\n    error: null,\n} as InitialStateType\nconst SET_STATUS = 'LAO/APP/SET_STATUS';\nconst SET_ERROR = 'LAO/APP/SET_ERROR'\nexport type InitialStateType = {\n    status: StatusType\n    error: string | null\n}\n\nexport const appReducer = (state: InitialStateType = initializeState, action: ActionsType): InitialStateType => {\n    switch (action.type) {\n        case SET_STATUS:\n            return {...state, status: action.status}\n        case SET_ERROR:\n            return {...state, error: action.error}\n        default:\n            return state;\n    }\n};\n\nexport const setAppStatus = (status: StatusType) => ({type: SET_STATUS, status} as const)\nexport const setAppError = (error: string | null) => ({type: SET_ERROR, error} as const)\n","import axios from 'axios'\n\nconst defaultOptions = {\n    withCredentials: false,\n    baseURL: 'https://tager.dev.ozitag.com',\n    headers: {\n        Accept: 'application/json',\n    }\n};\n\nexport const axiosInstance = axios.create(defaultOptions);\n\nconst interceptorConfigCreator = () => (config: any) => {\n    const token = localStorage.getItem('accessToken')\n    if (Boolean(token)) {\n        config.headers.Authorization = `Bearer ${token}`\n    } else {\n        delete config.headers.Authorization\n    }\n    return config\n}\n\nconst interceptorsConfig = interceptorConfigCreator()\naxiosInstance.interceptors.request.use(interceptorsConfig)\n","import {axiosInstance} from './api';\nimport {AxiosResponse} from 'axios';\nimport {UserType} from '../redux/auth-reducer';\n\ntype LoginResponseType = {\n    tokenType: string,\n    expiresAt: string,\n    accessToken: string,\n    refreshToken: string\n}\n\nexport const authAPI = {\n    login(clientId: number, email: string, password: string) {\n        return axiosInstance.post<AxiosResponse<LoginResponseType>>(`/api/auth/user`, {clientId, email, password})\n            .then(res => res)\n    },\n    logout() {\n        return axiosInstance.post<{ success: boolean }>(`/api/tager/user/profile/logout`)\n            .then(res => res)\n    },\n    getUser() {\n        return axiosInstance.get<AxiosResponse<UserType>>(`/api/tager/user/profile`)\n            .then(res => res)\n    },\n}\n","import {ThunkDispatch} from 'redux-thunk';\nimport {setAppError, setAppStatus} from './app-reducer';\nimport {authAPI} from '../API/auth-api';\nimport {AppStateType} from './store';\n\nexport type UserType = {\n    name: string,\n    email: string,\n}\n\nconst SET_IS_LOGIN = 'LAO/AUTH/SET_IS_LOGIN';\nconst SET_USER_DATA = 'LAO/AUTH/SET_USER_DATA'\n\ntype ActionsType = ReturnType<typeof setAppStatus>\n    | ReturnType<typeof setIsLoggedIn>\n    | ReturnType<typeof setUserData>\n    | ReturnType<typeof setAppError>\n\nlet initializeState = {\n    isLoggedIn: false,\n    user: {} as UserType\n};\n\nexport type InitialStateType = typeof initializeState\nexport const authReducer = (state: InitialStateType = initializeState, action: ActionsType): InitialStateType => {\n    switch (action.type) {\n        case SET_IS_LOGIN:\n            return {...state, isLoggedIn: action.value}\n        case SET_USER_DATA:\n            return {...state, user: action.user}\n        default:\n            return state;\n    }\n};\n\nexport const setIsLoggedIn = (value: boolean) => ({type: SET_IS_LOGIN, value} as const)\nexport const setUserData = (user: UserType) => ({type: SET_USER_DATA, user} as const)\n\nexport const getAuthUserData = () => async (dispatch: ThunkDispatch<AppStateType, unknown, ActionsType>) => {\n    dispatch(setAppStatus('loading'))\n    try {\n        const res = await authAPI.getUser()\n        dispatch(setUserData(res.data.data));\n        dispatch(setIsLoggedIn(true));\n        dispatch(setAppStatus('success'));\n    } catch (e) {\n        dispatch(setAppError(e.message))\n        dispatch(setAppStatus('unsuccessful'));\n    }\n};\n\nexport const login = (clientId: number, email: string, password: string) =>\n    async (dispatch: ThunkDispatch<AppStateType, unknown, ActionsType>) => {\n        dispatch(setAppStatus('loading'))\n        try {\n            const res = await authAPI.login(clientId, email, password)\n            localStorage.setItem('accessToken', res.data.data.accessToken);\n            localStorage.setItem('refreshToken', res.data.data.refreshToken);\n            dispatch(setIsLoggedIn(true));\n            dispatch(setAppError(''));\n        } catch (e) {\n            dispatch(setAppError(e.message))\n            dispatch(setAppStatus('unsuccessful'));\n        }\n    };\n\nexport const logout = () => async (dispatch: ThunkDispatch<AppStateType, unknown, ActionsType>) => {\n    dispatch(setAppStatus('loading'))\n    try {\n        localStorage.removeItem('accessToken')\n        localStorage.removeItem('refreshToken')\n        dispatch(setAppStatus('success'));\n        dispatch(setIsLoggedIn(false))\n        dispatch(setAppError(''))\n        await authAPI.logout()\n    } catch (e) {\n        dispatch(setAppError(e.message))\n        dispatch(setAppStatus('unsuccessful'));\n    }\n}\n\n","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes, KeyboardEvent} from 'react'\nimport style from './Input.module.scss'\n\ntype DefaultInputPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>;\n\ntype SuperInputTextPropsType = DefaultInputPropsType & {\n    onChangeText?: (value: string) => void\n    onEnter?: () => void\n    error?: string\n    spanClassName?: string\n    inputLabelName: string\n    inputLabel: string\n\n};\n\nconst Input: React.FC<SuperInputTextPropsType> = (\n    {\n        inputLabel, inputLabelName,\n        type,\n        onChange, onChangeText,\n        onKeyPress, onEnter,\n        error,\n        className, spanClassName,\n\n        ...restProps\n    }\n) => {\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange\n        && onChange(e)\n\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e: KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e)\n\n        e.key === 'Enter'\n        && onEnter\n        && onEnter()\n    }\n\n    const finalInputClassName = className ? `${style.superInput} ${className}` : style.superInput\n    const finalSpanClassName = spanClassName ? `${style.spanError} ${spanClassName}` : style.spanError\n\n    return (\n\n        <div className={style.inputWrapper}>\n            <input type={'text'}\n                   id={inputLabelName}\n                   onChange={onChangeCallback}\n                   onKeyPress={onKeyPressCallback}\n                   className={finalInputClassName}\n\n                   {...restProps}\n            />\n            <label htmlFor={inputLabelName}>*{inputLabel}</label>\n            {error && <span className={finalSpanClassName}>{error}</span>}\n        </div>\n    )\n}\n\nexport default Input\n","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react';\nimport style from './Button.module.scss';\n\ntype DefaultButtonPropsType = DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>;\n\ntype SuperButtonPropsType = DefaultButtonPropsType & {\n    red?: boolean\n}\n\nexport const Button: React.FC<SuperButtonPropsType> = React.memo((\n    {\n        red, className,\n        ...restProps\n    }\n) => {\n    const finalClassName = red ? `${style.red} ${style.default}` : `${className} ${style.default}`;\n\n    return (\n        <button className={finalClassName}\n                {...restProps}\n        />\n    );\n})\n\n","import React, {ChangeEvent} from 'react';\nimport {FormikErrors, useFormik} from 'formik';\nimport Input from '../Input/Input';\nimport {Button} from '../Button/Button';\n\nimport style from './LoginForm.module.scss'\n\nexport interface FormValues {\n    clientId: number,\n    email: string,\n    password: string,\n}\n\ninterface LoginFormProps {\n    callback: (value: FormValues) => void\n}\n\nconst validate = (values: FormValues) => {\n    let errors: FormikErrors<FormValues> = {};\n\n    if (!values.clientId) {\n        errors.clientId = 'Required';\n    } else if (values.clientId.toString().length === 0) {\n        errors.clientId = 'Must be 1 characters or more';\n    } else if (values.clientId.toString().length > 5) {\n        errors.clientId = 'Must be 10 characters or less';\n    }\n\n    if (!values.email) {\n        errors.email = 'Required';\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\n        errors.email = 'Invalid email address';\n    }\n\n    if (!values.password) {\n        errors.password = 'Required';\n    } else if (values.password.length < 4) {\n        errors.password = 'Must be 4 characters or more';\n    } else if (values.password.length > 10) {\n        errors.password = 'Must be 10 characters or less';\n    }\n\n    return errors;\n}\n\nexport const LoginForm: React.FC<LoginFormProps> = React.memo(({callback}) => {\n\n    const formik = useFormik({\n        initialValues: {\n            clientId: 1,\n            email: 'user@ozitag.com',\n            // email: '',\n            password: 'user',\n            // password: '',\n        },\n        validate,\n        onSubmit: (values, {setSubmitting}) => {\n            callback(values)\n            setSubmitting(false)\n        },\n    });\n\n    const containerInput = (id: string, inputLabelName: string, inputLabel: string, name: string,\n                            type: string, className: string,\n                            error: string | undefined, onChange: (e: ChangeEvent) => void,\n                            value: number | string, placeholder?: string) => {\n        return <Input id={id}\n                      name={name}\n                      type={type}\n                      className={className}\n                      error={error}\n                      onChange={onChange}\n                      value={value}\n                      placeholder={placeholder}\n                      inputLabelName={inputLabelName}\n                      inputLabel={inputLabel}\n        />\n    }\n\n    return (\n        <div className={style.formWrapper}>\n            <div className={style.headline}>\n                <h1 className={style.headlineText}>WELCOME TO TAG</h1>\n            </div>\n            <div className={style.form}>\n                <p className={style.formDescription}>Sign in to TAG</p>\n                <form onSubmit={formik.handleSubmit}>\n                    {containerInput('clientId', 'clientId', 'Enter ID', 'clientId', 'text',\n                        style.input, formik.errors.clientId, formik.handleChange, formik.values.clientId, 'Example: \"1\"')}\n\n                    {containerInput('email', 'email', 'Enter Email', 'email', 'text',\n                        style.input, formik.errors.email, formik.handleChange, formik.values.email, 'Example: \"user@ozitag.com\"')}\n\n                    {containerInput('password', 'password', 'Enter Password', 'password', 'text',\n                        style.input, formik.errors.password, formik.handleChange, formik.values.password, 'Example: \"user\"')}\n\n                    <div className={style.formBtnWrapper}>\n                        <Button type=\"submit\" className={style.formBtn}>Log in</Button>\n                    </div>\n                </form>\n            </div>\n        </div>\n    )\n})\n\n\n\n\n\n","import React from 'react';\nimport style from './Error.module.scss'\n\ntype ErrorType = {\n    error: string\n}\n\nexport const Error: React.FC<ErrorType> = React.memo(({error}) => {\n    return (\n        <div className={style.errorWrapper}>\n            <div className={style.error}>{error ? error : ''}</div>\n        </div>\n    )\n});\n\n","import React from 'react';\nimport style from './Preloader.module.scss';\n\nexport const Preloader: React.FC = React.memo(() => {\n    return (\n        <div className={style.preloaderWrapper}>\n            <div className={style.loader}>Loading...</div>\n        </div>\n    );\n})\n\n","import React, {useCallback} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {selectorAppError, selectorIsLogged, selectorRequestStatus} from '../UserPage/selectors';\nimport {login} from '../../redux/auth-reducer';\nimport {FormValues, LoginForm} from '../../Components/LoginForm/LoginForm';\nimport {Error} from '../../Components/Error/Error';\nimport {Preloader} from '../../Components/Preloader/Preloader';\nimport {Redirect} from 'react-router-dom';\nimport {PATH} from '../../App';\n\nimport style from './LoginPage.module.scss'\n\nexport const LoginPage: React.FC = React.memo(() => {\n\n    const status = useSelector(selectorRequestStatus)\n    const error = useSelector(selectorAppError)\n    const isLogIn = useSelector(selectorIsLogged)\n\n    const dispatch = useDispatch()\n\n    const sentLoginData = useCallback((value: FormValues) => {\n        const {clientId, email, password} = value\n        dispatch(login(clientId, email, password))\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    if (isLogIn) {\n        return <Redirect to={PATH.USER}/>\n    }\n    return (\n        <div className={style.wrapper}>\n            {status === 'loading'\n                ? <Preloader/>\n                : <>\n                    <LoginForm callback={sentLoginData}/>\n                    {error && <Error error={error}/>}\n                </>\n            }\n        </div>\n    );\n})\n\n\n\n\n","import React, {useCallback, useEffect} from 'react';\nimport {useDispatch, useSelector} from 'react-redux';\nimport {selectorAppError, selectorIsLogged, selectorRequestStatus, selectorUserData} from './selectors';\nimport {Button} from '../../Components/Button/Button';\nimport {Preloader} from '../../Components/Preloader/Preloader';\nimport {Error} from '../../Components/Error/Error';\nimport {getAuthUserData, logout} from '../../redux/auth-reducer';\nimport style from './UserPage.module.scss'\nimport {Redirect} from 'react-router-dom';\nimport {PATH} from '../../App';\n\nexport const UserPage: React.FC = React.memo(() => {\n\n    const {email, name} = useSelector(selectorUserData)\n    const status = useSelector(selectorRequestStatus)\n    const error = useSelector(selectorAppError)\n    const isLoggedIn = useSelector(selectorIsLogged)\n\n    const logoutHandler = useCallback(() => {\n        dispatch(logout())\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    const dispatch = useDispatch()\n\n    useEffect(() => {\n        dispatch(getAuthUserData())\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, []);\n\n    if (!isLoggedIn) {\n        return <Redirect to={PATH.LOGIN}/>\n    }\n\n    return (\n        <div className={style.wrapper}>\n            {status === 'loading'\n                ? <Preloader/>\n                : <div className={style.userBlock}>\n                    <div className={style.userInfo}>\n                        <div className={style.info}>{email}</div>\n                        <div className={style.info}>{name}</div>\n                    </div>\n                    {\n                        isLoggedIn && (\n                            <div className={style.logoutBtnWrapper}>\n                                <Button onClick={logoutHandler}\n                                        className={style.logoutBtn}>\n                                    LOGOUT\n                                </Button>\n                            </div>)\n                    }\n                    {error && <Error error={error}/>}\n                </div>\n            }\n        </div>\n    );\n});\n\n","import React, {useEffect} from 'react';\nimport {Redirect, Route, Switch} from 'react-router-dom';\nimport {LoginPage} from './Pages/LoginPage/LoginPage';\nimport {UserPage} from './Pages/UserPage/UserPage';\nimport {useDispatch} from 'react-redux';\nimport {getAuthUserData} from './redux/auth-reducer';\n\nimport s from './App.module.scss'\n\nexport const PATH = {\n    LOGIN: '/login',\n    USER: '/user',\n}\n\nexport const App: React.FC = () => {\n\n    const dispatch = useDispatch()\n    useEffect(() => {\n        if (localStorage.getItem('accessToken')) {\n            dispatch(getAuthUserData())\n        }\n        // eslint-disable-next-line react-hooks/exhaustive-deps\n    }, [])\n\n    return (\n        <div className={s.app}>\n            <div className={s.content}>\n                <Switch>\n                    <Route path=\"/\" exact render={() => <Redirect to={PATH.USER}/>}/>\n                    <Route path={PATH.LOGIN} exact render={() => <LoginPage/>}/>\n                    <Route path={PATH.USER} exact render={() => <UserPage/>}/>\n                </Switch>\n            </div>\n        </div>\n    );\n};\n","import {applyMiddleware, combineReducers, createStore} from 'redux'\nimport thunkMiddleware from 'redux-thunk'\nimport {appReducer} from './app-reducer';\nimport {authReducer} from './auth-reducer';\n\nexport const reducers = combineReducers({\n    appState: appReducer,\n    authState: authReducer,\n})\n\nexport type AppStateType = ReturnType<typeof reducers>\nexport let store = createStore(reducers, applyMiddleware(thunkMiddleware))\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport reportWebVitals from './reportWebVitals';\nimport {App} from './App';\nimport {HashRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {store} from './redux/store';\n\nimport './index.css';\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}